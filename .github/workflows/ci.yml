---
name: CI
on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Unit tests
        run: |
          go test -v -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        if: ${{ github.event_name != 'pull_request' }}
        uses: codecov/codecov-action@v3.1.0
        with:
          file: ./coverage.out
          flags: ${{ runner.os }}
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release the artefacts
    permissions:
      contents: write
      packages: write
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Run GoReleaser
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          distribution: goreleaser
          args: release --skip-validate --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PAT }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_PRO_KEY }}
